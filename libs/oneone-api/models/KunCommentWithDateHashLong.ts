/**
 * title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ConstantCommentType } from './ConstantCommentType';
import { ConstantCommentUserType } from './ConstantCommentUserType';
import { NoSqlPagingListDataChildKunCommentReturn } from './NoSqlPagingListDataChildKunCommentReturn';
import { HttpFile } from '../http/http';

export class KunCommentWithDateHashLong {
    'postId': string;
    'channelId': number;
    'commentId': string;
    'createAt': number;
    'content': string;
    'commentUserId': string;
    'commentUserName': string;
    'commentUserAvatarOpt'?: string;
    'firstCommentId'?: string;
    'parentCommentId'?: string;
    'isAuthor': boolean;
    'isDeleted': boolean;
    'isIllegal': boolean;
    'niceLookCount': number;
    'images'?: Array<string>;
    'commentType': ConstantCommentType;
    'childCommentCount'?: number;
    'commentUserType'?: ConstantCommentUserType;
    'childComments': NoSqlPagingListDataChildKunCommentReturn;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "postId",
            "baseName": "postId",
            "type": "string",
            "format": ""
        },
        {
            "name": "channelId",
            "baseName": "channelId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "commentId",
            "baseName": "commentId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "createAt",
            "baseName": "createAt",
            "type": "number",
            "format": ""
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "string",
            "format": ""
        },
        {
            "name": "commentUserId",
            "baseName": "commentUserId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "commentUserName",
            "baseName": "commentUserName",
            "type": "string",
            "format": ""
        },
        {
            "name": "commentUserAvatarOpt",
            "baseName": "commentUserAvatarOpt",
            "type": "string",
            "format": ""
        },
        {
            "name": "firstCommentId",
            "baseName": "firstCommentId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "parentCommentId",
            "baseName": "parentCommentId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "isAuthor",
            "baseName": "isAuthor",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isDeleted",
            "baseName": "isDeleted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isIllegal",
            "baseName": "isIllegal",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "niceLookCount",
            "baseName": "niceLookCount",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "images",
            "baseName": "images",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "commentType",
            "baseName": "commentType",
            "type": "ConstantCommentType",
            "format": ""
        },
        {
            "name": "childCommentCount",
            "baseName": "childCommentCount",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "commentUserType",
            "baseName": "commentUserType",
            "type": "ConstantCommentUserType",
            "format": ""
        },
        {
            "name": "childComments",
            "baseName": "childComments",
            "type": "NoSqlPagingListDataChildKunCommentReturn",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return KunCommentWithDateHashLong.attributeTypeMap;
    }

    public constructor() {
    }
}

